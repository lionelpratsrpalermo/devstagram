// FORMAS DE FORMATEAR FECHAS
date('l Y-m-d');
date('l Y-m-d', strtotime('last sunday'));
date('l Y-m-d', strtotime('next friday'));
date('l Y-m-d', strtotime('next friday -2 days'));

-----

// INVERTIR EL ORDEN DE LOS ELEMENTOS DE UN ARRAY
array_reverse($array)

-----

// ORDENAR ARRAY ASOCIATIVO (U OBJETO) DE FORMA ASCENDENTE O DESCENDENTE SEGUN CAMPO/S
* Si $player se trata de un objeto vvv
foreach ($players as $clave => $valor) {
    $apellido[$clave] = $valor->apellido;
    $nombre[$clave] = $valor->nombre;
}
array_multisort($apellido, SORT_ASC, $nombre, SORT_ASC, $players); // en este caso, ordeno por apellido, y luego por nombre
* Si $player se trata de un array vvv
foreach ($players as $clave => $valor) {
    $apellido[$clave] = $valor['apellido'];
    $nombre[$clave] = $valor['nombre'];
}
array_multisort($apellido, SORT_ASC, $nombre, SORT_ASC, $players); // en este caso, ordeno por apellido, y luego por nombre

-----

// CONVERTIR UN ARRAY EN JSON
json_encode($array)

-----

// CONVERTIR UN JSON EN ARRAY
json_decode($json)

-----

// EXPRESIONES REGULARES ( TUTORIAL https://www.youtube.com/watch?v=xGaXH7spCyA&list=PLZ2ovOgdI-kUSqWuyoGJMZL6xldXw6hIg&index=49 )
/* 
$string = 'lionelprats@gmail.com';
$arroba = "/@/";
$dotCom = "/.com$/";
if (preg_match($arroba, $string) and preg_match($dotCom, $string))
    return "$string es un email correcto";
return "$string no es una dirección de correo válida."; 
*/

/* 
$string = 'Avenida';
$regular_expression = "/^Av/i";
if (preg_match($regular_expression, $string))
    return "Los datos ingresados son correctos";
return "Tiene que ingresar una avenida."; 
*/

$string = 'Llegaré pronto que voy anxando';
// $regular_expression = "/hol[^b-u6-9\]]/i"; // i al final para indicar que no distinga entre mayusculas y minusculas
/* $regular_expression = "/b.lita/i"; */
/* $regular_expression = "/b\wlita/i"; */ // \w -> solo alfanumericos
// $regular_expression = "/b\Wlita/i"; // \W -> solo no alfanumericos 21'50"
// $regular_expression = "/b\dlita/i"; // \d -> solo numeros -> 22'38"
// $regular_expression = "/b\Dlita/i"; // \D -> todo menos numeros -> 23'10"
// $regular_expression = "/hola*s/i"; // * -> la "a" puede existir (una o muchas veces), o no -> 24'05"
// $regular_expression = "/hola+s/i"; // + -> la "a" debe existir al menos 1 vez -> 25'43"
// $regular_expression = "/ho?la/i"; // ? -> la "o" puede existir o no -> 26'18"
// $regular_expression = "/ho{3}la/i"; // {3} -> la "o" debe existir 3 veces -> 28'20"
// $regular_expression = "/ho{2,5}la/i"; // {2,5} -> la "o" puede existir entre 2 y 5 veces -> 29'40"
$regular_expression = "/Llegaré pronto que voy (vol|and)ando/i"; // (vol|and) -> los () nos permiten crear subpatrones -> "vol" o "and" debe preceder al string "ando" -> 30'45"
if (preg_match($regular_expression, $string, $matches))
    echo "Datos correctos <br>";
else
    echo "Datos incorrectos <br>";
var_dump($matches);

echo "<br><br><br><br>";

// https://www.youtube.com/watch?v=gL5oO63sT5I
// https://youtu.be/gL5oO63sT5I
// $url = 'youtu.be/gL5oO63sT5I';
$url = 'Youtube.com/watch?v=gL5oO63sT5I';

// $patron = "%^(https://)?(www\.)?(youtu\.be/|youtube\.com/watch\?v=)(\w{10,12})%";
$patron = "%^(?:https://)?(?:www\.)?(?:youtu\.be/|youtube\.com/watch\?v=)(\w{10,12})%i"; // ?: -> para omitir los subpatrones que no me interese recuperar -> 51'35"
if (preg_match($patron, $url, $matches2)) {
    echo "La URL es válida <br>";
} else {
    echo "La URL no es válida <br>";
}
echo "<pre>";
// print_r($matches);
print_r($matches2);
// print_r($matches2[4]);
echo "<pre>";

-----

CURSO DE PHP DESDE CERO - TURORIAL CODERS FREE https://www.youtube.com/playlist?list=PLZ2ovOgdI-kUSqWuyoGJMZL6xldXw6hIg

-----

COMANDO PARA LEVANTAR UN SERVIDOR LOCAL EN EL PUERTO 3000 (Y EJECUTAR UN PROYECTO PHP UBICADO EN EL ESCRITORIO)
php -S localhost:3000